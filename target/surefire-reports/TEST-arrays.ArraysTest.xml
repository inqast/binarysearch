<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="arrays.ArraysTest" time="0.122" tests="72" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="23"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/vverner/study/mephi/java/sort/binarysearch/binarysearch/target/test-classes:/Users/vverner/study/mephi/java/sort/binarysearch/binarysearch/target/classes:/Users/vverner/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/vverner/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/vverner/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar:/Users/vverner/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar:/Users/vverner/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/vverner/.m2/repository/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar:/Users/vverner/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="23"/>
    <property name="user.country" value="RU"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk-23.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/vverner/study/mephi/java/sort/binarysearch/binarysearch/target/surefire/surefirebooter-20241130135840526_3.jar /Users/vverner/study/mephi/java/sort/binarysearch/binarysearch/target/surefire 2024-11-30T13-58-40_480-jvmRun1 surefire-20241130135840526_1tmp surefire_0-20241130135840526_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="test" value="arrays.ArraysTest"/>
    <property name="surefire.test.class.path" value="/Users/vverner/study/mephi/java/sort/binarysearch/binarysearch/target/test-classes:/Users/vverner/study/mephi/java/sort/binarysearch/binarysearch/target/classes:/Users/vverner/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/vverner/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/vverner/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar:/Users/vverner/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar:/Users/vverner/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/vverner/.m2/repository/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar:/Users/vverner/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/vverner"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-09-17"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk-23.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/vverner/study/mephi/java/sort/binarysearch/binarysearch"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/vverner/study/mephi/java/sort/binarysearch/binarysearch/target/surefire/surefirebooter-20241130135840526_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="23+37-2369"/>
    <property name="user.name" value="vverner"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="14.5"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="maven.ext.class.path" value="/Users/vverner/.vscode/extensions/oracle.oracle-java-23.0.1/nbcode/java/maven-nblib/netbeans-eventspy.jar"/>
    <property name="localRepository" value="/Users/vverner/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/1w/__qd4whx6g73lfhgd6l2g6r80000gp/T/"/>
    <property name="java.version" value="23"/>
    <property name="user.dir" value="/Users/vverner/study/mephi/java/sort/binarysearch/binarysearch"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/vverner/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="23+37-2369"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="java.class.version" value="67.0"/>
  </properties>
  <testcase name="testBinarySearchLongsBounded(long[], int, int, long, int)[1]" classname="arrays.ArraysTest" time="0.022"/>
  <testcase name="testBinarySearchLongsBounded(long[], int, int, long, int)[2]" classname="arrays.ArraysTest" time="0.002"/>
  <testcase name="testBinarySearchLongsBounded(long[], int, int, long, int)[3]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchLongsBounded(long[], int, int, long, int)[4]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchLongsBounded(long[], int, int, long, int)[5]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchLongsBounded(long[], int, int, long, int)[6]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchDoubleBounded(double[], int, int, double, int)[1]" classname="arrays.ArraysTest" time="0.003"/>
  <testcase name="testBinarySearchDoubleBounded(double[], int, int, double, int)[2]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchDoubleBounded(double[], int, int, double, int)[3]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchDoubleBounded(double[], int, int, double, int)[4]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchDoubleBounded(double[], int, int, double, int)[5]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchBytesBounded(byte[], int, int, byte, int)[1]" classname="arrays.ArraysTest" time="0.002"/>
  <testcase name="testBinarySearchBytesBounded(byte[], int, int, byte, int)[2]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchBytesBounded(byte[], int, int, byte, int)[3]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchBytesBounded(byte[], int, int, byte, int)[4]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchBytesBounded(byte[], int, int, byte, int)[5]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchBytesBounded(byte[], int, int, byte, int)[6]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchIntsBounded(int[], int, int, int, int)[1]" classname="arrays.ArraysTest" time="0.002"/>
  <testcase name="testBinarySearchIntsBounded(int[], int, int, int, int)[2]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchIntsBounded(int[], int, int, int, int)[3]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchIntsBounded(int[], int, int, int, int)[4]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchIntsBounded(int[], int, int, int, int)[5]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchIntsBounded(int[], int, int, int, int)[6]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchBytes(byte[], byte, int)[1]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchBytes(byte[], byte, int)[2]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchBytes(byte[], byte, int)[3]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchBytes(byte[], byte, int)[4]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchBytes(byte[], byte, int)[5]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchBytes(byte[], byte, int)[6]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchLongs(long[], long, int)[1]" classname="arrays.ArraysTest" time="0.002"/>
  <testcase name="testBinarySearchLongs(long[], long, int)[2]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchLongs(long[], long, int)[3]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchLongs(long[], long, int)[4]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchLongs(long[], long, int)[5]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchLongs(long[], long, int)[6]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchLongs(short[], short, int)[1]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchLongs(short[], short, int)[2]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchLongs(short[], short, int)[3]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchLongs(short[], short, int)[4]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchLongs(short[], short, int)[5]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchLongs(short[], short, int)[6]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchDouble(double[], double, int)[1]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchDouble(double[], double, int)[2]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchDouble(double[], double, int)[3]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchDouble(double[], double, int)[4]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchDouble(double[], double, int)[5]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchDouble(double[], double, int)[6]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchDouble(double[], double, int)[7]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchFloats(float[], float, int)[1]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchFloats(float[], float, int)[2]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchFloats(float[], float, int)[3]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchFloats(float[], float, int)[4]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchFloats(float[], float, int)[5]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchFloats(float[], float, int)[6]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchFloats(float[], float, int)[7]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchFloatsBounded(float[], int, int, float, int)[1]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchFloatsBounded(float[], int, int, float, int)[2]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchFloatsBounded(float[], int, int, float, int)[3]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchFloatsBounded(float[], int, int, float, int)[4]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchFloatsBounded(float[], int, int, float, int)[5]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchShortBounded(short[], int, int, short, int)[1]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchShortBounded(short[], int, int, short, int)[2]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchShortBounded(short[], int, int, short, int)[3]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchShortBounded(short[], int, int, short, int)[4]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchShortBounded(short[], int, int, short, int)[5]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchShortBounded(short[], int, int, short, int)[6]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchInts(int[], int, int)[1]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchInts(int[], int, int)[2]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchInts(int[], int, int)[3]" classname="arrays.ArraysTest" time="0.001"/>
  <testcase name="testBinarySearchInts(int[], int, int)[4]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchInts(int[], int, int)[5]" classname="arrays.ArraysTest" time="0.0"/>
  <testcase name="testBinarySearchInts(int[], int, int)[6]" classname="arrays.ArraysTest" time="0.0"/>
</testsuite>